*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sftoolbar.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sftoolbarbutton AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: execute		&& Called from Click to perform the action for this button if oImplementation isn't an object
		*m: oimplementation_assign
		*m: setenabled		&& Sets the Enabled property to the match the implementation object's
		*m: setvisible		&& Sets the Visible property to the match the implementation object's
		*p: oimplementation		&& A reference to an implementation object
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = ""
	Height = 24
	Name = "sftoolbarbutton"
	oimplementation = .NULL.		&& A reference to an implementation object
	Width = 24
	_memberdata = <VFPData>
		<memberdata name="oimplementation" type="property" display="oImplementation"/>
		<memberdata name="oimplementation_assign" type="method" display="oImplementation_Assign"/>
		<memberdata name="execute" type="method" display="Execute"/>
		<memberdata name="setenabled" type="method" display="SetEnabled"/>
		<memberdata name="setvisible" type="method" display="SetVisible"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE Click
		if vartype(This.oImplementation) = 'O'
			This.oImplementation.Execute()
		else
			This.Execute()
		endif vartype(This.oImplementation) = 'O'
		
	ENDPROC

	PROCEDURE Destroy
		* Unbind from and nuke our implementation object.
		
		if vartype(This.oImplementation) = 'O'
			unbindevents(This.oImplementation)
			This.oImplementation = .NULL.
		endif vartype(This.oImplementation) = 'O'
		
	ENDPROC

	PROCEDURE execute		&& Called from Click to perform the action for this button if oImplementation isn't an object
	ENDPROC

	PROCEDURE oimplementation_assign
		* Set a reference to an implementation object and bind to changes to its
		* lVisible and lEnabled properties.
		
		lparameters toObject
		if vartype(toObject) = 'O'
			This.oImplementation = toObject
			bindevent(This.oImplementation, 'lVisible', This, 'SetVisible', 1)
			bindevent(This.oImplementation, 'lEnabled', This, 'SetEnabled', 1)
		endif vartype(toObject) = 'O'
		
	ENDPROC

	PROCEDURE setenabled		&& Sets the Enabled property to the match the implementation object's
		if vartype(This.oImplementation) = 'O'
			This.Enabled = This.oImplementation.lEnabled
		endif vartype(This.oImplementation) = 'O'
		
	ENDPROC

	PROCEDURE setvisible		&& Sets the Visible property to the match the implementation object's
		if vartype(This.oImplementation) = 'O'
			This.Visible = This.oImplementation.lVisible
		endif vartype(This.oImplementation) = 'O'
		
	ENDPROC

ENDDEFINE
